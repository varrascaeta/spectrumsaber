# Generated by Django 5.0.4 on 2025-10-22 21:05

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('places', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Raw Data', 'Raw Data'), ('Text Data', 'Text Data'), ('Photometry', 'Photometry'), ('Radiance', 'Radiance'), ('Average Radiance', 'Average Radiance'), ('Text Radiance', 'Text Radiance'), ('Text Average Radiance', 'Text Average Radiance'), ('Radiance Parabolic Correction', 'Radiance Parabolic Correction'), ('Text Radiance Parabolic Correction', 'Text Radiance Parabolic Correction'), ('Reflectance', 'Reflectance'), ('Average Reflectance', 'Average Reflectance'), ('Text Reflectance', 'Text Reflectance'), ('Text Average Reflectance', 'Text Average Reflectance'), ('Reflectance Parabolic Correction', 'Reflectance Parabolic Correction'), ('Text Reflectance Parabolic Correction', 'Text Reflectance Parabolic Correction')], max_length=128, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Coverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('ftp_created_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_complete', models.BooleanField(default=False)),
                ('is_unmatched', models.BooleanField(default=False)),
                ('last_synced_at', models.DateTimeField(null=True)),
            ],
            options={
                'ordering': ['path'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeasuringTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('model_name', models.CharField(max_length=255, null=True)),
                ('fov', models.FloatField(null=True)),
                ('measure_height', models.FloatField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PathRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField()),
                ('pattern', models.CharField(max_length=255)),
                ('date_format', models.CharField(blank=True, max_length=255, null=True)),
                ('level', models.CharField(choices=[('coverage', 'coverage'), ('campaign', 'campaign'), ('data_point', 'data_point'), ('category', 'category'), ('measurement', 'measurement'), ('complimentary_data', 'complimentary_data')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Spreadsheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('ftp_created_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_complete', models.BooleanField(default=False)),
                ('is_unmatched', models.BooleanField(default=False)),
                ('last_synced_at', models.DateTimeField(null=True)),
                ('sheet_type', models.CharField(choices=[('Office Sheet', 'OFC'), ('Field Sheet', 'FLD'), ('Complimentary Data Sheet', 'CDS')], max_length=255)),
                ('delimiter', models.CharField(default=';', max_length=1)),
            ],
            options={
                'ordering': ['path'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnmatchedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('ftp_created_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_complete', models.BooleanField(default=False)),
                ('is_unmatched', models.BooleanField(default=False)),
                ('last_synced_at', models.DateTimeField(null=True)),
                ('parent_path', models.CharField(max_length=255)),
                ('level', models.CharField(choices=[('coverage', 'coverage'), ('campaign', 'campaign'), ('data_point', 'data_point'), ('category', 'category'), ('measurement', 'measurement'), ('complimentary_data', 'complimentary_data')], max_length=255)),
            ],
            options={
                'ordering': ['path'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('ftp_created_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_complete', models.BooleanField(default=False)),
                ('is_unmatched', models.BooleanField(default=False)),
                ('last_synced_at', models.DateTimeField(null=True)),
                ('date', models.DateField(null=True)),
                ('external_id', models.CharField(max_length=255, null=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='places.district')),
                ('coverage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='campaigns.coverage')),
                ('measuring_tool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='campaigns.measuringtool')),
                ('spreadsheets', models.ManyToManyField(blank=True, related_name='campaigns', to='campaigns.spreadsheet')),
            ],
            options={
                'ordering': ['path'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComplimentaryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('ftp_created_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_complete', models.BooleanField(default=False)),
                ('is_unmatched', models.BooleanField(default=False)),
                ('last_synced_at', models.DateTimeField(null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complimentary_data', to='campaigns.campaign')),
            ],
            options={
                'ordering': ['path'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('ftp_created_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_complete', models.BooleanField(default=False)),
                ('is_unmatched', models.BooleanField(default=False)),
                ('last_synced_at', models.DateTimeField(null=True)),
                ('order', models.IntegerField(default=0)),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_points', to='campaigns.campaign')),
            ],
            options={
                'ordering': ['path'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('ftp_created_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_complete', models.BooleanField(default=False)),
                ('is_unmatched', models.BooleanField(default=False)),
                ('last_synced_at', models.DateTimeField(null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='campaigns.category')),
                ('data_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='campaigns.datapoint')),
            ],
            options={
                'ordering': ['path'],
                'abstract': False,
            },
        ),
    ]
